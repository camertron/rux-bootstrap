module Bootstrap
  module Buttons
    class Button < ViewComponent::Base
      attr_reader :flavor, :outline, :size, :block_level, :active, :disabled

      def initialize(flavor:, outline: false, size: :normal, block_level: false, active: false, disabled: false)
        @flavor = flavor
        @outline = outline
        @size = size
        @block_level = block_level
        @active = active
        @disabled = disabled
      end

      def call
        class_names = [
          'btn',
          flavor_class,
          size_class,
          block_class,
          active_class
        ]

        class_names.compact!

        if disabled
          <button class={class_names.join(' ')} role="button" disabled="disabled">
            {content}
          </button>
        else
          <button class={class_names.join(' ')} role="button">
            {content}
          </button>
        end
      end

      private

      def flavor_class
        outline ? "btn-outline-#{flavor}" : "btn-#{flavor}"
      end

      def size_class
        case size
          when :large
            'btn-lg'
          when :small
            'btn-sm'
          else
            nil
        end
      end

      def block_class
        block_level ? 'btn-block' : nil
      end

      def active_class
        active ? 'active' : nil
      end
    end
  end
end
